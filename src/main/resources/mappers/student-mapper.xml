<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="studentMapper">
	<resultMap type="kh.study.academy.student.vo.StudentVO" 		id="student">
		<id column="STUDENT_CODE"									property="studentCode"/>
		<result column="STUDENT_NAME" 								property="studentName"/>
		<result column="STUDENT_GENDER" 							property="studentGender"/>
		<result column="BIRTHDAY" 									property="birthday"/>
		<result column="YEAR" 										property="year"/>
		<result column="ADDR" 										property="addr"/>
		<result column="ADDR_DETAIL"								property="addrDetail"/>
		<result column="STUDENT_TELL"								property="studentTell"/>
		<result column="REG_DATE" 									property="regDate"/>
		<collection property="subjectVO" 							resultMap="adminMapper.subject" />
		<collection property="studentLessonInfoList" 				resultMap="studentLessonInfo" />
		
	</resultMap>
	
	<resultMap type="kh.study.academy.student.vo.StudentLessonInfoVO"   id="studentLessonInfo">
		<id column="STUDENT_LESSON_CODE" 								property="studentLessonCode" />
		<result column="LESSON_INFO_CODE"								property="lessonInfoCode"/>
		<result column="ATTENDANCE_CODE" 								property="attendanceCode"/>
		<result column="STUDENT_CODE" 									property="studentCode"/>
	</resultMap>
	
	
	
	<resultMap type="kh.study.academy.student.vo.PaymentVO" 		id="payment">
		<id column="PAYMENT_CODE" 									property="paymentCode" />
		<result column="LESSON_INFO_CODE" 							property="lessonInfoCode"/>
		<result column="IS_PAY"										property="isPay"/>
		<result column="STUDENT_CODE" 								property="studentCode"/>
	</resultMap>
	

<select id="getNextStudentCode" resultType="String">
	 SELECT 'STUDENT_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(STUDENT_CODE, 9))),0) +1, 3, 0) 
	  FROM STUDENT
</select>


<!-- 학생 등록 -->
<insert id="insertStudent">
	INSERT INTO STUDENT (
		STUDENT_CODE
		, STUDENT_NAME
		, STUDENT_GENDER
		, BIRTHDAY
		, YEAR
		, ADDR
		, ADDR_DETAIL
		, STUDENT_TELL		
	) VALUES (
		#{studentCode}
		, #{studentName}
		, #{studentGender}
		, #{birthday}
		, #{year}
		, #{addr}
		, #{addrDetail}
		, #{studentTell}
	)
</insert>

<insert id="insertPayment">
	<selectKey resultType="String" keyProperty="paymentCode" order="BEFORE">
	   SELECT 'PAYMENT_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(PAYMENT_CODE, 9))),0) +1, 3, 0) 
	   FROM PAYMENT
	</selectKey>
<!-- 	<selectKey resultType="String" keyProperty="lessonsCode" order="BEFORE">
	   SELECT 'LESSONS_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(PAYMENT_CODE, 5))),0) +1, 3, 0) 
	   FROM PAYMENT
	</selectKey> -->
	
	INSERT INTO PAYMENT (
		PAYMENT_CODE
		, LESSON_INFO_CODE
		, STUDENT_CODE
	) VALUES (
		#{paymentCode}
		, 'LESSON_INFO_001'
		, #{studentCode}
	)
</insert>


<!-- 학생 리스트 조회 -->
<select id="selectStuList" resultMap="student">
	SELECT STUDENT_CODE 
		, STUDENT_NAME
		, YEAR
		, DECODE(STUDENT_GENDER, 'W', '여', '남') AS STUDENT_GENDER
		<!-- 수강 과목, 반 -->
		<!-- , SUBJECT_NAME -->
	FROM STUDENT STU 
	<if test="_parameter != null and !_parameter.equals('')">
		WHERE STUDENT_NAME LIKE '%' || #{studentName} || '%'
	</if><!-- SUBJECT SUB, PAYMENT PAY, LESSONS LES
	WHERE STU.STUDENT_CODE = PAY.STUDENT_CODE
	AND LES.SUBJECT_CODE = SUB.SUBJECT_CODE 
	AND PAY.LESSONS_CODE = LES.LESSONS_CODE -->
	ORDER BY STUDENT_CODE ASC
</select>

	
	
<!-- 학생 상세 조회 -->	
<select id="selectStuDetail" resultMap="student">
	SELECT STUDENT_CODE
		, STUDENT_NAME
		, TO_CHAR(BIRTHDAY, 'YYYY-MM-DD') AS BIRTHDAY
		, YEAR
		, ADDR||' ' ||ADDR_DETAIL AS ADDR
		, STUDENT_TELL
		, TO_CHAR(REG_DATE, 'YYYY-MM-DD') AS REG_DATE 
		, DECODE(STUDENT_GENDER, 'W', '여', '남') AS STUDENT_GENDER
	<!-- 수강과목, 수강 반, 담당강사 -->
	FROM STUDENT
	WHERE STUDENT_CODE = #{studentCode}
</select>
	
	

<!-- 학생 선택 삭제 -->	
<delete id="deleteCheckedStu">
	DELETE STUDENT    
	WHERE STUDENT_CODE IN 
	<foreach collection="studentCodeList" item="studentCode" separator="," open="(" close=")">
		#{studentCode}
	</foreach>
</delete>
	

<!-- 학생 삭제 -->	
<delete id="deleteStu">
	DELETE STUDENT    
	WHERE STUDENT_CODE = #{studentCode}
</delete>
	

<!-- 학생 수정 -->
<!-- 년도 지나면 학년도 자동으로 업뎃되게,, 바꾸고 싶은데 -->
<update id="updateStu">
	UPDATE STUDENT
	SET STUDENT_TELL = #{studentTell}
		, ADDR = #{addr}
		, ADDR_DETAIL = #{addrDetail}
		<!-- 반, 과목 -->
	WHERE STUDENT_CODE = #{studentCode}
</update>
	
	
	
	
	
	
</mapper>



