<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="teacherMapper">
	<resultMap type="kh.study.academy.teacher.vo.TeacherVO" 	id="teacher">
		<id column="TEACHER_CODE" 								property="teacherCode" />
		<result column="TEACHER_NAME" 							property="teacherName" />
		<result column="TEACHER_TELL" 							property="teacherTell" />
		<result column="CAREER" 								property="career" />
		<result column="TEACHER_ID" 							property="teacherId" />
		<result column="TEACHER_PW" 							property="teacherPw" />
		<result column="WRONG_PW_CNT" 							property="wrongPwCnt" />
		<result column="TEACHER_STATUS" 						property="teacherStatus" />
		<result column="TEACHER_ROLE" 							property="teacherRole" />
		<result column="TEACHER_EMAIL" 							property="teacherEmail" />
		<result column="TEACHER_GENDER" 						property="teacherGender" />
		<result column="TEACHER_BIRTHDAY" 						property="teacherBirthday" />
		
		<result column="SUBJECT_CODE" 							property="subjectCode" />
		
		<association property="subjectVO" 						resultMap="adminMapper.subject"/>
		<association property="profileImgVO" 					resultMap="teacherMapper.profileImg"/>
	</resultMap>
	
	<resultMap type="kh.study.academy.teacher.vo.ProfileImgVO" 	id="profileImg">
		<id column="PROFILE_IMG_NUM" 							property="profileImgNum" />
		<result column="TEACHER_CODE" 							property="teacherCode" />
		<result column="ORIGIN_FILE_NAME" 						property="originFileName" />
		<result column="STORED_FILE_NAME" 						property="storedFileName" />
	</resultMap>

	
	<!-- 다음에 들어갈 TEACHER_CODE 조회 -->	
	<select id="selectNextTeacherCode" resultType="String">
		 SELECT 'TEACHER_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(TEACHER_CODE, 9))), 0) + 1, 3, 0) 
	     FROM TEACHER  
	</select>
	
	
	<!-- 회원가입 -->
	
	<insert id="join">
		<!-- <selectKey resultType="String" keyProperty="teacherCode" order="BEFORE">
	         SELECT 'TEACHER_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(TEACHER_CODE, 9))), 0) + 1, 3, 0) 
	         FROM TEACHER  
	      </selectKey> -->
	
		INSERT INTO TEACHER (
		    TEACHER_CODE
		    , TEACHER_NAME
		    , TEACHER_TELL
		    , CAREER
		    , SUBJECT_CODE
		    , TEACHER_ID
		    , TEACHER_PW
		    , TEACHER_EMAIL
		    , TEACHER_GENDER
		    , TEACHER_BIRTHDAY
		 
		) VALUES (
			#{teacherCode}
		    , #{teacherName}
		    , #{teacherTell}
		    , #{career}
		    , #{subjectCode}
		    , #{teacherId}
		    , #{teacherPw}
		    , #{teacherEmail}
		    , #{teacherGender}
		    , #{teacherBirthday}
		)
		
	</insert>
	
	
	<!-- 로그인 -->
	<select id="login" resultMap="teacher">
		SELECT TEACHER_ID
			, TEACHER_PW
			, TEACHER_ROLE
			, (SELECT STORED_FILE_NAME
				FROM PROFILE_IMG
				WHERE TEACHER_CODE = (SELECT TEACHER_CODE
										FROM TEACHER
										WHERE TEACHER_ID =#{teacherId})) AS STORED_FILE_NAME
		FROM TEACHER
		WHERE TEACHER_ID =#{teacherId}
	</select>
	
	<!-- 로그인 아이디 정보 찾기  -->
	<select id="findId" resultMap="teacher">
		SELECT TEACHER_CODE
				,TEACHER_ID
		FROM TEACHER
		WHERE TEACHER_NAME = #{teacherName}
		AND TEACHER_TELL = #{teacherTell}
	</select>
	
	<!--비밀 번호 찾기에서 임시 비밀번호로 변경 -->
	<update id="updatePw">
		UPDATE TEACHER
		SET
		TEACHER_PW = #{teacherPw}
		WHERE TEACHER_ID = #{teacherId}
	</update>
	
	<!-- 전화번호 인증번호 전송 전 입력한 데이터에 일치하는 회원이 있는지 조회 -->
	<select id="findInfoForSendSms" resultMap="teacher">
		SELECT TEACHER_CODE
			, TEACHER_TELL
		FROM TEACHER
		WHERE TEACHER_ID = #{teacherId}
		AND TEACHER_NAME = #{teacherName}
		AND TEACHER_TELL = #{teacherTell}
	</select>
	
	<!-- 연락처 인증성공 시 그 인증번호로 임시비밀번호 업데이트 -->
	<update id="updateTemporaryPw">
		UPDATE TEACHER
		SET TEACHER_PW = #{teacherPw}
		WHERE TEACHER_TELL = #{teacherTell}
	</update>
	
	<!-- 회원가입시 아이디 중복 검사 -->
	<select id="idDoubleCheck" resultMap="teacher">
		SELECT TEACHER_ID
		FROM TEACHER
		WHERE TEACHER_ID = #{teacherId}
	</select>

	<!-- 회원가입시 전화번호 중복 검사 -->
	<select id="tellDoubleCheck" resultMap="teacher">
		SELECT TEACHER_TELL
		FROM TEACHER
		WHERE TEACHER_TELL = #{teacherTell}
	</select>
	
	
	<!-- 개인정보 조회 -->
	<select id="selectTeacherInfo" resultMap="teacher">
		SELECT TEACHER_CODE
			, TEACHER_NAME
			, TEACHER_TELL
			, CAREER
			, SUBJECT_CODE
			, (SELECT SUBJECT_NAME FROM SUBJECT WHERE SUBJECT_CODE = T.SUBJECT_CODE) AS SUBJECT_NAME
			, TEACHER_ID
			, DECODE(TEACHER_STATUS, 'Y','재직중','퇴사') AS TEACHER_STATUS
			, DECODE(TEACHER_ROLE, 'UNAPPROVED', '미승인', 'TEACHER', '교사', 'ADMIN', '관리자') AS TEACHER_ROLE
			, DECODE(TEACHER_GENDER, 'W', '여성', '남성')AS TEACHER_GENDER
            , TEACHER_BIRTHDAY
            , TEACHER_EMAIL
            , (SELECT STORED_FILE_NAME FROM PROFILE_IMG WHERE TEACHER_CODE = T.TEACHER_CODE) AS STORED_FILE_NAME
		FROM TEACHER T
		WHERE TEACHER_ID = #{teacherId}
	</select>

	<!-- 기본 프로필 사진 등록 -->
	<insert id="insertProfileImg">
		<selectKey resultType="String" keyProperty="profileImgNum" order="BEFORE">
	         SELECT 'PROFILE_IMG_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(PROFILE_IMG_NUM, 13))), 0) + 1, 3, 0) 
	         FROM PROFILE_IMG 
	    </selectKey>
	    
	    INSERT INTO PROFILE_IMG (
		    PROFILE_IMG_NUM
			, TEACHER_CODE
			, ORIGIN_FILE_NAME
			, STORED_FILE_NAME
		 
		) VALUES (
			#{profileImgNum}
		    , #{teacherCode}
		    , #{originFileName}
		    , #{storedFileName}
		)
	    
	</insert>
	
	<!-- 프로필이미지 수정 -->
	<update id="updateProfileImg">
		UPDATE PROFILE_IMG
		SET ORIGIN_FILE_NAME = #{originFileName}
		    , STORED_FILE_NAME = #{storedFileName}
		WHERE TEACHER_CODE = #{teacherCode}
	
	</update>
	
	<!-- 프로필 사진 조회 -->
	<select id="selectProfileImg" resultMap="profileImg">
		SELECT STORED_FILE_NAME 
		FROM PROFILE_IMG 
		WHERE TEACHER_CODE = #{teacherCode}
	</select>
	
	<!-- 개인정보 수정 -->
	<update id="updateInfo">
		UPDATE TEACHER
		SET
		
		<if test="teacherName !=null and !teacherName.equals('')">
			TEACHER_NAME = #{teacherName}
		</if>
		<if test="teacherTell !=null and !teacherTell.equals('')">
			TEACHER_TELL = #{teacherTell}
		</if>
		<if test="teacherEmail !=null and !teacherEmail.equals('')">
			TEACHER_EMAIL = #{teacherEmail}
		</if>
		
		WHERE TEACHER_ID = #{teacherId}
	</update>
	
	
	<!-- 회원탈퇴 :TeacherStatus ->N으로 변경 -->
	<update id="leaveAcademy">
		UPDATE TEACHER
		SET TEACHER_STATUS = 'N'
		, TEACHER_ROLE ='DELETED'
		WHERE TEACHER_ID = #{teacherId}
	</update>
	
			
</mapper>
























