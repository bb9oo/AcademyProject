<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="adminMapper">
	
	
	<!-- <resultMap type=" id="">
		<id column="" 							property="" />
		<result column="" 								property="" />
		<result column="" 								property="" />
		<result column="" 							property="" />
	
	</resultMap> -->
	
	 <resultMap type="kh.study.academy.admin.vo.SubjectVO" id="subject">
		<id column="SUBJECT_CODE" 						property="subjectCode" />
		<result column="SUBJECT_NAME" 					property="subjectName" />
		
	</resultMap> 
	
	
	<resultMap type="kh.study.academy.admin.vo.LessonRoomVO" id="lessonRoom">
		<id column="LESSON_ROOM_CODE" 					property="lessonRoomCode" />
		<result column="ROOM_NAME" 						property="roomName" />
		<result column="LESSON_ROOM_MAX_STUDENT" 		property="lessonRoomMaxStudent" />
		<result column="IS_USE" 						property="isUse" />
		
	</resultMap> 




<!-- /////<교사 등록 관련>//////////////////////////////////////////////////////////// -->
	
	
	<!-- 교사리스트 조회 -->
	<!--,SUBJECT CODE 수정 필요... -->
	<select id="selectTeacherList" resultMap="teacherMapper.teacher">
	
		SELECT TEACHER_CODE
			, TEACHER_NAME
			, TEACHER_TELL
			, CAREER
			, TEACHER_ID
			, DECODE(TEACHER_STATUS, 'Y','재직중','퇴사') AS TEACHER_STATUS
			, DECODE(TEACHER_ROLE, 'UNAPPROVED','미승인','교사') AS TEACHER_ROLE
			, SUBJECT_CODE
			, (SELECT SUBJECT_NAME FROM SUBJECT WHERE SUBJECT_CODE = T.SUBJECT_CODE) AS SUBJECT_NAME
		FROM TEACHER T
	</select>
	
	<!--교사리스트 페이지에서 교사 조회 -->
	<!-- SUBJECT_CODE 및 WHERE 절 수정중-->
	<select id="searchTeacher" resultMap="teacherMapper.teacher" parameterType="hashMap">
		SELECT TEACHER_CODE
			, TEACHER_NAME
			, TEACHER_TELL
			, CAREER
			, TEACHER_ID
			, TEACHER_PW
			, DECODE(TEACHER_STATUS, 'Y','재직중','퇴사') AS TEACHER_STATUS
			<!-- , LESSONS_CODE -->
			, T.SUBJECT_CODE
			, SUBJECT_NAME
			, DECODE(TEACHER_ROLE, 'UNAPPROVED','미승인','교사') AS TEACHER_ROLE
			, DECODE(TEACHER_GENDER,'W','여자','남자') AS TEACHER_GENDER
			, TEACHER_BIRTHDAY
			, TEACHER_EMAIL
		FROM TEACHER T, SUBJECT S
		WHERE T.SUBJECT_CODE = S.SUBJECT_CODE
		<if test="teacherName != null and !teacherName.equals('')">
		AND TEACHER_NAME LIKE ('%'||#{teacherName}||'%')
		</if>
		<if test="teacherId != null and !teacherId.equals('')">
		AND TEACHER_ID LIKE ('%'||#{teacherId}||'%')
		</if>
		<if test="teacherTell != null and !teacherTell.equals('')">
		AND TEACHER_TELL LIKE ('%'||#{teacherTell}||'%')
		</if>
		<if test="teacherStatus !=null and !teacherStatus.equals('')">
		AND TEACHER_STATUS = #{teacherStatus}
		</if>
		<if test="teacherRole !=null and !teacherRole.equals('')">
		AND TEACHER_ROLE = #{teacherRole}
		</if>
		<if test="subjectCode !=null and !subjectCode.equals('')">
		AND T.SUBJECT_CODE = #{subjectCode}
		</if>
	</select>
	
	
	<!--교사 리스트에서 아이디 클릭 시 해당 교사 상세정보 조회  -->
	<!-- 수정중 -->
	<select id="selectTeacherDetail" resultMap="teacherMapper.teacher">
	
		SELECT TEACHER_CODE
			, TEACHER_NAME
			, TEACHER_TELL
			, CAREER
			, TEACHER_ID
			, DECODE(TEACHER_STATUS, 'Y','재직중','퇴사') AS TEACHER_STATUS
			, DECODE(TEACHER_ROLE, 'UNAPPROVED','미승인','교사') AS TEACHER_ROLE
			, LESSONS_CODE
			, T.SUBJECT_CODE
			, (SELECT SUBJECT_NAME FROM SUBJECT WHERE SUBJECT_CODE = T.SUBJECT_CODE) AS SUBJECT_NAME
			, DECODE(TEACHER_GENDER,'W','여자','남자') AS TEACHER_GENDER
			, TO_CHAR(TEACHER_BIRTHDAY, 'YYYY-MM-DD') AS TEACHER_BIRTHDAY
			, TEACHER_EMAIL
		FROM TEACHER T
		WHERE TEACHER_CODE = #{teacherCode]
	</select>
	
	
	<!--교사 상태 변경  -->
 	<update id="changeTeacherStatus">
		UPDATE TEACHER
		SET
		TEACHER_STATUS = #{teacherStatus}
		WHERE TEACHER_CODE = #{teacherCode}
	</update>
	
	
	<!--교사 권한 승인 -->
	<!--교사 권한은 되돌릴 수 없음...한번 승인된 교사는 상태변경을 통해 퇴사 등으로 변경  -->
 	<update id="changeTeacherRole">
		UPDATE TEACHER
		SET
		TEACHER_STATUS = 'Y'
		WHERE TEACHER_CODE = #{teacherCode}
	</update>
	
	
	
<!-- /////<과목 등록 관련>//////////////////////////////////////////////////////////// -->
	
	
	<!-- 과목 등록 쿼리문  -->
 	<insert id="insertSubject">
 	
		<selectKey resultType="String" keyProperty="subjectCode" order="BEFORE">
			SELECT 'SUBJECT_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(SUBJECT_CODE, 9))), 0) + 1, 3, 0) 
			FROM SUBJECT
		</selectKey>
	
		INSERT INTO SUBJECT(
			SUBJECT_CODE
			, SUBJECT_NAME
		) VALUES (
			#{subjectCode}
			, #{subjectName}
		)
	</insert> 
		
		
	<!--  등록된 과목 조회  -->	
	<select id="selectSubject" resultMap="subject">
		SELECT SUBJECT_CODE
			, SUBJECT_NAME
		FROM SUBJECT
		ORDER BY SUBJECT_CODE
		
<!-- 		SELECT LESSON_CODE
			, SUBJECT_CODE
			, (SELECT SUBJECT_NAME
				FROM SUBJECT
				WHERE SUBJECT_CODE = .SUBJECT_CODE) AS SUBJECT_NAME
		FROM LESSON L -->
		
		
	</select>
	
	<!-- 등록한 과목을 체크해서 삭제 -->
	<delete id="deleteSubject">
		DELETE SUBJECT
		WHERE SUBJECT_CODE IN
		
		<foreach collection="subjectCodeList" item="subjectCode" separator="," open="(" close=")">
			#{subjectCode}
		</foreach>
	
	</delete>
	
	
<!-- /////<교실 등록 관련>////////////////////////////////////////////////////////// -->
	
	
	<!-- 교실 등록 쿼리문  -->
		<insert id="regLessonRoom">
 		<!-- keyProperty는 내가 select한 LESSON_ROOM_001 ... 코드를 담을 곳
 		 String lessonRoomCode = LESSON_ROOM_001 이라는 뜻-->
		<selectKey resultType="String" keyProperty="lessonRoomCode" order="BEFORE">
			SELECT 'LESSON_ROOM_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(LESSON_ROOM_CODE, 13))), 0) + 1, 3, 0) 
			FROM LESSON_ROOM
		</selectKey>
	
		INSERT INTO LESSON_ROOM(
			LESSON_ROOM_CODE
			, ROOM_NAME
			, LESSON_ROOM_MAX_STUDENT 
			, IS_USE
		) VALUES (
			#{lessonRoomCode}
		    , #{roomName}
		    , #{lessonRoomMaxStudent}
		    , #{isUse}
		)
	</insert> 
	
	<!-- 등록된 교실 조회 -->	
	<select id="selectLessonRoom" resultMap="lessonRoom">
		SELECT LESSON_ROOM_CODE
			, ROOM_NAME
			, LESSON_ROOM_MAX_STUDENT 
			, IS_USE
		FROM LESSON_ROOM
		<if test="_parameter != null and !_parameter.equals('')">  <!-- 검색기능 -->
		WHERE ROOM_NAME LIKE '%' || #{roomName} || '%'
		</if>
		ORDER BY LESSON_ROOM_CODE 
		
	</select>
	
	
	<!-- 등록한 교실을 체크해서 삭제 -->
		
		<delete id="deleteLessonRoom">
		DELETE LESSON_ROOM
		WHERE LESSON_ROOM_CODE IN
		
		<foreach collection="lessonRoomCodeList" item="lessonRoomCode" separator="," open="(" close=")">
				#{lessonRoomCode}
		</foreach>
	
	</delete>
		
	





</mapper>
























